LIBRETRO_COMM_DIR := \
	$(CORE_DIR)/libretro/libretro-common

# include flags
INCFLAGS += \
	-I$(CORE_DIR)/src \
	-I$(CORE_DIR)/libretro \
	-I$(LIBRETRO_COMM_DIR)/include \
	-I$(CORE_DIR)/include \
	-I$(CORE_DIR)/src/midi/munt

# common files
SOURCES_CXX := \
	$(CORE_DIR)/libretro/libretro_gfx.cpp \
	$(CORE_DIR)/libretro/libretro_mapper.cpp \
	$(CORE_DIR)/libretro/libretro_mixer.cpp \
	$(CORE_DIR)/libretro/libretro.cpp \
	$(CORE_DIR)/src/cpu/callback.cpp \
	$(CORE_DIR)/src/cpu/core_dyn_x86.cpp \
	$(CORE_DIR)/src/cpu/core_dynrec.cpp \
	$(CORE_DIR)/src/cpu/core_full.cpp \
	$(CORE_DIR)/src/cpu/core_normal.cpp \
	$(CORE_DIR)/src/cpu/core_prefetch.cpp \
	$(CORE_DIR)/src/cpu/core_simple.cpp \
	$(CORE_DIR)/src/cpu/cpu.cpp \
	$(CORE_DIR)/src/cpu/flags.cpp \
	$(CORE_DIR)/src/cpu/modrm.cpp \
	$(CORE_DIR)/src/cpu/paging.cpp \
	$(CORE_DIR)/src/dos/cdrom_image.cpp \
	$(CORE_DIR)/src/dos/cdrom.cpp \
	$(CORE_DIR)/src/dos/dos_classes.cpp \
	$(CORE_DIR)/src/dos/dos_devices.cpp \
	$(CORE_DIR)/src/dos/dos_execute.cpp \
	$(CORE_DIR)/src/dos/dos_files.cpp \
	$(CORE_DIR)/src/dos/dos_ioctl.cpp \
	$(CORE_DIR)/src/dos/dos_keyboard_layout.cpp \
	$(CORE_DIR)/src/dos/dos_memory.cpp \
	$(CORE_DIR)/src/dos/dos_misc.cpp \
	$(CORE_DIR)/src/dos/dos_mscdex.cpp \
	$(CORE_DIR)/src/dos/dos_programs.cpp \
	$(CORE_DIR)/src/dos/dos_tables.cpp \
	$(CORE_DIR)/src/dos/dos.cpp \
	$(CORE_DIR)/src/dos/drive_cache.cpp \
	$(CORE_DIR)/src/dos/drive_fat.cpp \
	$(CORE_DIR)/src/dos/drive_iso.cpp \
	$(CORE_DIR)/src/dos/drive_local.cpp \
	$(CORE_DIR)/src/dos/drive_virtual.cpp \
	$(CORE_DIR)/src/dos/drives.cpp \
	$(CORE_DIR)/src/dosbox.cpp \
	$(CORE_DIR)/src/fpu/fpu.cpp \
	$(CORE_DIR)/src/gui/midi.cpp \
	$(CORE_DIR)/src/gui/render_scalers.cpp \
	$(CORE_DIR)/src/gui/render.cpp \
	$(CORE_DIR)/src/hardware/adlib.cpp \
	$(CORE_DIR)/src/hardware/cmos.cpp \
	$(CORE_DIR)/src/hardware/dbopl.cpp \
	$(CORE_DIR)/src/hardware/disney.cpp \
	$(CORE_DIR)/src/hardware/dma.cpp \
	$(CORE_DIR)/src/hardware/gameblaster.cpp \
	$(CORE_DIR)/src/hardware/gus.cpp \
	$(CORE_DIR)/src/hardware/hardware.cpp \
	$(CORE_DIR)/src/hardware/iohandler.cpp \
	$(CORE_DIR)/src/hardware/joystick.cpp \
	$(CORE_DIR)/src/hardware/keyboard.cpp \
	$(CORE_DIR)/src/hardware/memory.cpp \
	$(CORE_DIR)/src/hardware/mpu401.cpp \
	$(CORE_DIR)/src/hardware/pci_bus.cpp \
	$(CORE_DIR)/src/hardware/pcspeaker.cpp \
	$(CORE_DIR)/src/hardware/pic.cpp \
	$(CORE_DIR)/src/hardware/sblaster.cpp \
	$(CORE_DIR)/src/hardware/serialport/directserial.cpp \
	$(CORE_DIR)/src/hardware/serialport/libserial.cpp \
	$(CORE_DIR)/src/hardware/serialport/misc_util.cpp \
	$(CORE_DIR)/src/hardware/serialport/nullmodem.cpp \
	$(CORE_DIR)/src/hardware/serialport/serialdummy.cpp \
	$(CORE_DIR)/src/hardware/serialport/serialport.cpp \
	$(CORE_DIR)/src/hardware/serialport/softmodem.cpp \
	$(CORE_DIR)/src/hardware/tandy_sound.cpp \
	$(CORE_DIR)/src/hardware/timer.cpp \
	$(CORE_DIR)/src/hardware/vga_attr.cpp \
	$(CORE_DIR)/src/hardware/vga_crtc.cpp \
	$(CORE_DIR)/src/hardware/vga_dac.cpp \
	$(CORE_DIR)/src/hardware/vga_draw.cpp \
	$(CORE_DIR)/src/hardware/vga_gfx.cpp \
	$(CORE_DIR)/src/hardware/vga_memory.cpp \
	$(CORE_DIR)/src/hardware/vga_misc.cpp \
	$(CORE_DIR)/src/hardware/vga_other.cpp \
	$(CORE_DIR)/src/hardware/vga_paradise.cpp \
	$(CORE_DIR)/src/hardware/vga_s3.cpp \
	$(CORE_DIR)/src/hardware/vga_seq.cpp \
	$(CORE_DIR)/src/hardware/vga_tseng.cpp \
	$(CORE_DIR)/src/hardware/vga_xga.cpp \
	$(CORE_DIR)/src/hardware/vga.cpp \
	$(CORE_DIR)/src/ints/bios_disk.cpp \
	$(CORE_DIR)/src/ints/bios_keyboard.cpp \
	$(CORE_DIR)/src/ints/bios.cpp \
	$(CORE_DIR)/src/ints/ems.cpp \
	$(CORE_DIR)/src/ints/int10_char.cpp \
	$(CORE_DIR)/src/ints/int10_memory.cpp \
	$(CORE_DIR)/src/ints/int10_misc.cpp \
	$(CORE_DIR)/src/ints/int10_modes.cpp \
	$(CORE_DIR)/src/ints/int10_pal.cpp \
	$(CORE_DIR)/src/ints/int10_put_pixel.cpp \
	$(CORE_DIR)/src/ints/int10_vesa.cpp \
	$(CORE_DIR)/src/ints/int10_video_state.cpp \
	$(CORE_DIR)/src/ints/int10_vptable.cpp \
	$(CORE_DIR)/src/ints/int10.cpp \
	$(CORE_DIR)/src/ints/mouse.cpp \
	$(CORE_DIR)/src/ints/xms.cpp \
	$(CORE_DIR)/src/misc/cross.cpp \
	$(CORE_DIR)/src/misc/messages.cpp \
	$(CORE_DIR)/src/misc/programs.cpp \
	$(CORE_DIR)/src/misc/setup.cpp \
	$(CORE_DIR)/src/misc/support.cpp \
	$(CORE_DIR)/src/shell/shell_batch.cpp \
	$(CORE_DIR)/src/shell/shell_cmds.cpp \
	$(CORE_DIR)/src/shell/shell_misc.cpp \
	$(CORE_DIR)/src/shell/shell.cpp \
	$(CORE_DIR)/src/dos/cdrom_aspi_win32.cpp \
	$(CORE_DIR)/src/dos/cdrom_ioctl_win32.cpp \
	$(CORE_DIR)/src/hardware/mame/fmopl.cpp \
	$(CORE_DIR)/src/hardware/mame/saa1099.cpp \
	$(CORE_DIR)/src/hardware/mame/sn76496.cpp \
	$(CORE_DIR)/src/hardware/mame/ymf262.cpp

ifeq ($(WITH_IPX), 1)
SOURCES_CXX += \
	$(CORE_DIR)/src/hardware/ipx.cpp \
	$(CORE_DIR)/src/hardware/ipxserver.cpp
endif

SOURCES_C := \
	$(LIBRETRO_COMM_DIR)/libco/libco.c

ifneq ($(STATIC_LINKING), 1)
SOURCES_C += \
	$(LIBRETRO_COMM_DIR)/file/retro_dirent.c \
	$(LIBRETRO_COMM_DIR)/file/retro_stat.c
endif

ifeq ($(WITH_EMBEDDED_SDL), 1)
ifeq ($(platform),win)
	SOURCES_C += \
		$(CORE_DIR)/libretro/deps/SDL/src/thread/win32/SDL_sysmutex.c \
		$(CORE_DIR)/libretro/deps/SDL/src/thread/win32/SDL_syssem.c \
		$(CORE_DIR)/libretro/deps/SDL/src/thread/win32/SDL_systhread.c \
		$(CORE_DIR)/libretro/deps/SDL/src/cdrom/win32/SDL_syscdrom.c \
		$(CORE_DIR)/libretro/deps/SDL/src/timer/win32/SDL_systimer.c
	else
	SOURCES_C += \
		$(CORE_DIR)/libretro/deps/SDL/src/thread/pthread/SDL_syscond.c \
		$(CORE_DIR)/libretro/deps/SDL/src/thread/pthread/SDL_sysmutex.c \
		$(CORE_DIR)/libretro/deps/SDL/src/thread/pthread/SDL_syssem.c \
		$(CORE_DIR)/libretro/deps/SDL/src/thread/pthread/SDL_systhread.c \
		$(CORE_DIR)/libretro/deps/SDL/src/cdrom/dummy/SDL_syscdrom.c \
		$(CORE_DIR)/libretro/deps/SDL/src/timer/unix/SDL_systimer.c
	endif
	SOURCES_C += \
		$(CORE_DIR)/libretro/deps/SDL/src/thread/SDL_thread.c \
		$(CORE_DIR)/libretro/deps/SDL/src/timer/SDL_timer.c \
		$(CORE_DIR)/libretro/deps/SDL/src/cdrom/SDL_cdrom.c \
		$(CORE_DIR)/libretro/deps/SDL/src/SDL_error.c \
		$(CORE_DIR)/libretro/deps/SDL_net/SDLnet.c \
		$(CORE_DIR)/libretro/deps/SDL_net/SDLnetTCP.c \
		$(CORE_DIR)/libretro/deps/SDL_net/SDLnetUDP.c \
		$(CORE_DIR)/libretro/deps/SDL_net/SDLnetselect.c
	INCFLAGS += \
		-I$(CORE_DIR)/libretro/deps/include/ \
		-I$(CORE_DIR)/libretro/deps/include/SDL/ \
		-I$(CORE_DIR)/libretro/deps/SDL_net/
endif


# dynarec flags
ifeq ($(WITH_DYNAREC), arm)
	COMMONFLAGS += -DC_DYNREC="1" -DC_TARGETCPU="ARMV7LE" -DC_UNALIGNED_MEMORY="1"
else ifeq ($(WITH_DYNAREC), arm64)
	COMMONFLAGS += -DC_DYNREC="1" -DC_TARGETCPU="ARMV8LE" -DC_UNALIGNED_MEMORY="1"
else ifeq ($(WITH_DYNAREC), oldarm)
	COMMONFLAGS += -DC_DYNREC="1" -DC_TARGETCPU="ARMV4LE"
else ifeq ($(WITH_DYNAREC), x86_64)
	# dynarec currently broken in x86_64
	ifneq ($(platform),win)
		COMMONFLAGS += -DC_DYNREC="1" -DC_TARGETCPU="X86_64"
	endif
else ifeq ($(WITH_DYNAREC), x86)
	ifeq ($(platform),win)
		COMMONFLAGS += -DC_DYNAMIC_X86="1" -DC_TARGETCPU="X86"
	else
		COMMONFLAGS += -DC_DYNREC="1" -DC_TARGETCPU="X86"
	endif
else ifeq ($(WITH_DYNAREC), ppc)
	COMMONFLAGS += -DC_DYNREC="1" -DC_TARGETCPU="POWERPC"
else ifeq ($(WITH_DYNAREC), mips)
	COMMONFLAGS += -DC_DYNREC="0" -DC_TARGETCPU="MIPSEL"
endif
